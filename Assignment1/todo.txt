Deliverable: iRobotCreate.LineFollower, subclass of iRobotCreate.Controller
 - this class communicates with a dumb iRobotCreate robot-proxy (henceforth, "robot")
 - this class should handle all the fancy message-passing and state-tracking

To Do:
Startup:
 - flash lights on robot || play song on robot
 - clear measurement variables (= set to "unknown")
 - set "waiting" state (= wait for command input)
 - fire timeout message for 10 minutes in the future

Commands:
 - (measure): begin measurement (see below)
 - (report): print state (= "waiting" || "in progress" || "complete"); print measurement variables; print any errors or warnings
 - (reset): clear state variables; set "waiting" state

Measurement:
findWall:
 - move forward until BumpsAndWheelDrops goes off
 - back up a couple centimeters
 - rotate 90 degrees to right
 - record WallSignal raw value || ensure Wall set
 - execute findVirtualWall

findVirtualWall:
 - ensure WallSignal maintained || Wall set
 - move forward until (a) VirtualWall goes off or (b) BumpsAndWheelDrops goes off (= hit corner) or (c) Wall || WallSignal lost (= lost wall)
      if (a): execute traverseWall
      else if (b): execute findWall
      else if (c): rotate 90 degrees to left; execute findWall

traverseWall:
 - move forward until (a) BumpsAndWheelDrops goes off or (b) Wall || WallSignal lost
     if (a): rotate 180 degrees to left; record WallSignal raw value || ensure Wall set; start measureWall
     else if (b): ??

measureWall:
 - start distance measurement
 - move forward until (a) BumpsAndWheelDrops goes off or (b) Wall || WallSignal lost
     if (a): record distance + robot length; execute victory
     else if (b): ??
 
Victory:
 - output measurement results to controller's Commmand console
 - play victory song on robot; power down

Timeout:
 - on receiving timeout message, play sad song on robot; display red light on robot

	